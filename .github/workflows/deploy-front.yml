name: Vercel Production Deployment
env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
  BASE_URL_FRONT: ${{ secrets.BASE_URL_FRONT }}
  VITE_BACKEND_URL: ${{ secrets.VITE_BACKEND_URL }}
on:
  push:
    branches: [dev, main]
  pull_request:
    branches: [dev, main]
jobs:
  Deploy-Production:
    if: (github.event_name == 'push' && github.ref == 'refs/heads/dev') || (github.event_name == 'pull_request' && github.event.action == 'closed')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install Vercel CLI
        run: |
          cd apps/front/
          npm install --global vercel@latest
      - name: Install dependencies
        run: |
          cd apps/front/
          npm ci

      - name: Navigate to front folder and create .env.production file
        run: |
          cd apps/front/
          echo "VITE_BACKEND_URL=$VITE_BACKEND_URL" >> .env.production
          echo "BASE_URL_FRONT=$BASE_URL_FRONT" >> .env.production
          echo "NODE_ENV=${{ secrets.NODE_ENV }}" >> .env.production

      - name: Pull Vercel Environment Information
        run: |
          cd apps/front/
          vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}
      - name: Build Project Artifacts
        run: |
          cd apps/front/
          vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}
      - name: Deploy Project Artifacts to Vercel
        run: |
          cd apps/front/
          vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}
